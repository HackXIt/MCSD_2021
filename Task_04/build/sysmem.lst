ARM GAS  C:\Users\rini\AppData\Local\Temp\ccZQlztR.s 			page 1


   1              		.cpu arm7tdmi
   2              		.arch armv4t
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"sysmem.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._sbrk,"ax",%progbits
  18              		.align	1
  19              		.global	_sbrk
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	_sbrk:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "Core/Src/sysmem.c"
   1:Core/Src/sysmem.c **** /**
   2:Core/Src/sysmem.c ****  ******************************************************************************
   3:Core/Src/sysmem.c ****  * @file      sysmem.c
   4:Core/Src/sysmem.c ****  * @author    Generated by STM32CubeIDE
   5:Core/Src/sysmem.c ****  * @brief     STM32CubeIDE System Memory calls file
   6:Core/Src/sysmem.c ****  *
   7:Core/Src/sysmem.c ****  *            For more information about which C functions
   8:Core/Src/sysmem.c ****  *            need which of these lowlevel functions
   9:Core/Src/sysmem.c ****  *            please consult the newlib libc manual
  10:Core/Src/sysmem.c ****  ******************************************************************************
  11:Core/Src/sysmem.c ****  * @attention
  12:Core/Src/sysmem.c ****  *
  13:Core/Src/sysmem.c ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  14:Core/Src/sysmem.c ****  * All rights reserved.</center></h2>
  15:Core/Src/sysmem.c ****  *
  16:Core/Src/sysmem.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  17:Core/Src/sysmem.c ****  * the "License"; You may not use this file except in compliance with the
  18:Core/Src/sysmem.c ****  * License. You may obtain a copy of the License at:
  19:Core/Src/sysmem.c ****  *                        opensource.org/licenses/BSD-3-Clause
  20:Core/Src/sysmem.c ****  *
  21:Core/Src/sysmem.c ****  ******************************************************************************
  22:Core/Src/sysmem.c ****  */
  23:Core/Src/sysmem.c **** 
  24:Core/Src/sysmem.c **** /* Includes */
  25:Core/Src/sysmem.c **** #include <errno.h>
  26:Core/Src/sysmem.c **** #include <stdint.h>
  27:Core/Src/sysmem.c **** 
  28:Core/Src/sysmem.c **** /**
  29:Core/Src/sysmem.c ****  * Pointer to the current high watermark of the heap usage
  30:Core/Src/sysmem.c ****  */
  31:Core/Src/sysmem.c **** static uint8_t *__sbrk_heap_end = NULL;
ARM GAS  C:\Users\rini\AppData\Local\Temp\ccZQlztR.s 			page 2


  32:Core/Src/sysmem.c **** 
  33:Core/Src/sysmem.c **** /**
  34:Core/Src/sysmem.c ****  * @brief _sbrk() allocates memory to the newlib heap and is used by malloc
  35:Core/Src/sysmem.c ****  *        and others from the C library
  36:Core/Src/sysmem.c ****  *
  37:Core/Src/sysmem.c ****  * @verbatim
  38:Core/Src/sysmem.c ****  * ############################################################################
  39:Core/Src/sysmem.c ****  * #  .data  #  .bss  #       newlib heap       #          MSP stack          #
  40:Core/Src/sysmem.c ****  * #         #        #                         # Reserved by _Min_Stack_Size #
  41:Core/Src/sysmem.c ****  * ############################################################################
  42:Core/Src/sysmem.c ****  * ^-- RAM start      ^-- _end                             _estack, RAM end --^
  43:Core/Src/sysmem.c ****  * @endverbatim
  44:Core/Src/sysmem.c ****  *
  45:Core/Src/sysmem.c ****  * This implementation starts allocating at the '_end' linker symbol
  46:Core/Src/sysmem.c ****  * The '_Min_Stack_Size' linker symbol reserves a memory for the MSP stack
  47:Core/Src/sysmem.c ****  * The implementation considers '_estack' linker symbol to be RAM end
  48:Core/Src/sysmem.c ****  * NOTE: If the MSP stack, at any point during execution, grows larger than the
  49:Core/Src/sysmem.c ****  * reserved size, please increase the '_Min_Stack_Size'.
  50:Core/Src/sysmem.c ****  *
  51:Core/Src/sysmem.c ****  * @param incr Memory size
  52:Core/Src/sysmem.c ****  * @return Pointer to allocated memory
  53:Core/Src/sysmem.c ****  */
  54:Core/Src/sysmem.c **** void *_sbrk(ptrdiff_t incr)
  55:Core/Src/sysmem.c **** {
  28              		.loc 1 55 1 view -0
  29              		.cfi_startproc
  30              		@ Function supports interworking.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 55 1 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  39 0002 0300     		movs	r3, r0
  56:Core/Src/sysmem.c ****   extern uint8_t _end; /* Symbol defined in the linker script */
  40              		.loc 1 56 3 is_stmt 1 view .LVU2
  57:Core/Src/sysmem.c ****   extern uint8_t _estack; /* Symbol defined in the linker script */
  41              		.loc 1 57 3 view .LVU3
  58:Core/Src/sysmem.c ****   extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  42              		.loc 1 58 3 view .LVU4
  59:Core/Src/sysmem.c ****   const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  43              		.loc 1 59 3 view .LVU5
  44              		.loc 1 59 18 is_stmt 0 view .LVU6
  45 0004 0D4A     		ldr	r2, .L7
  46 0006 0E49     		ldr	r1, .L7+4
  47 0008 521A     		subs	r2, r2, r1
  60:Core/Src/sysmem.c ****   const uint8_t *max_heap = (uint8_t *)stack_limit;
  48              		.loc 1 60 3 is_stmt 1 view .LVU7
  49              	.LVL1:
  61:Core/Src/sysmem.c ****   uint8_t *prev_heap_end;
  50              		.loc 1 61 3 view .LVU8
  62:Core/Src/sysmem.c **** 
  63:Core/Src/sysmem.c ****   /* Initialize heap end at first call */
  64:Core/Src/sysmem.c ****   if (NULL == __sbrk_heap_end)
  51              		.loc 1 64 3 view .LVU9
ARM GAS  C:\Users\rini\AppData\Local\Temp\ccZQlztR.s 			page 3


  52              		.loc 1 64 12 is_stmt 0 view .LVU10
  53 000a 0E49     		ldr	r1, .L7+8
  54 000c 0968     		ldr	r1, [r1]
  55              		.loc 1 64 6 view .LVU11
  56 000e 0029     		cmp	r1, #0
  57 0010 09D0     		beq	.L5
  58              	.LVL2:
  59              	.L2:
  65:Core/Src/sysmem.c ****   {
  66:Core/Src/sysmem.c ****     __sbrk_heap_end = &_end;
  67:Core/Src/sysmem.c ****   }
  68:Core/Src/sysmem.c **** 
  69:Core/Src/sysmem.c ****   /* Protect heap from growing into the reserved MSP stack */
  70:Core/Src/sysmem.c ****   if (__sbrk_heap_end + incr > max_heap)
  60              		.loc 1 70 3 is_stmt 1 view .LVU12
  61              		.loc 1 70 23 is_stmt 0 view .LVU13
  62 0012 0C49     		ldr	r1, .L7+8
  63 0014 0868     		ldr	r0, [r1]
  64 0016 C318     		adds	r3, r0, r3
  65              	.LVL3:
  66              		.loc 1 70 6 view .LVU14
  67 0018 9342     		cmp	r3, r2
  68 001a 08D8     		bhi	.L6
  71:Core/Src/sysmem.c ****   {
  72:Core/Src/sysmem.c ****     errno = ENOMEM;
  73:Core/Src/sysmem.c ****     return (void *)-1;
  74:Core/Src/sysmem.c ****   }
  75:Core/Src/sysmem.c **** 
  76:Core/Src/sysmem.c ****   prev_heap_end = __sbrk_heap_end;
  69              		.loc 1 76 3 is_stmt 1 view .LVU15
  70              	.LVL4:
  77:Core/Src/sysmem.c ****   __sbrk_heap_end += incr;
  71              		.loc 1 77 3 view .LVU16
  72              		.loc 1 77 19 is_stmt 0 view .LVU17
  73 001c 094A     		ldr	r2, .L7+8
  74              	.LVL5:
  75              		.loc 1 77 19 view .LVU18
  76 001e 1360     		str	r3, [r2]
  78:Core/Src/sysmem.c **** 
  79:Core/Src/sysmem.c ****   return (void *)prev_heap_end;
  77              		.loc 1 79 3 is_stmt 1 view .LVU19
  78              	.LVL6:
  79              	.L1:
  80:Core/Src/sysmem.c **** }
  80              		.loc 1 80 1 is_stmt 0 view .LVU20
  81              		@ sp needed
  82 0020 10BC     		pop	{r4}
  83 0022 02BC     		pop	{r1}
  84 0024 0847     		bx	r1
  85              	.LVL7:
  86              	.L5:
  66:Core/Src/sysmem.c ****   }
  87              		.loc 1 66 5 is_stmt 1 view .LVU21
  66:Core/Src/sysmem.c ****   }
  88              		.loc 1 66 21 is_stmt 0 view .LVU22
  89 0026 0749     		ldr	r1, .L7+8
  90 0028 0748     		ldr	r0, .L7+12
ARM GAS  C:\Users\rini\AppData\Local\Temp\ccZQlztR.s 			page 4


  91              	.LVL8:
  66:Core/Src/sysmem.c ****   }
  92              		.loc 1 66 21 view .LVU23
  93 002a 0860     		str	r0, [r1]
  94 002c F1E7     		b	.L2
  95              	.LVL9:
  96              	.L6:
  72:Core/Src/sysmem.c ****     return (void *)-1;
  97              		.loc 1 72 5 is_stmt 1 view .LVU24
  98 002e FFF7FEFF 		bl	__errno
  99              	.LVL10:
  72:Core/Src/sysmem.c ****     return (void *)-1;
 100              		.loc 1 72 11 is_stmt 0 view .LVU25
 101 0032 0C23     		movs	r3, #12
 102 0034 0360     		str	r3, [r0]
  73:Core/Src/sysmem.c ****   }
 103              		.loc 1 73 5 is_stmt 1 view .LVU26
  73:Core/Src/sysmem.c ****   }
 104              		.loc 1 73 12 is_stmt 0 view .LVU27
 105 0036 0120     		movs	r0, #1
 106 0038 4042     		rsbs	r0, r0, #0
 107 003a F1E7     		b	.L1
 108              	.L8:
 109              		.align	2
 110              	.L7:
 111 003c 00000000 		.word	_estack
 112 0040 00000000 		.word	_Min_Stack_Size
 113 0044 00000000 		.word	.LANCHOR0
 114 0048 00000000 		.word	_end
 115              		.cfi_endproc
 116              	.LFE0:
 118              		.section	.bss.__sbrk_heap_end,"aw",%nobits
 119              		.align	2
 120              		.set	.LANCHOR0,. + 0
 123              	__sbrk_heap_end:
 124 0000 00000000 		.space	4
 125              		.text
 126              	.Letext0:
 127              		.file 2 "c:\\users\\rini\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 128              		.file 3 "c:\\users\\rini\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 129              		.file 4 "c:\\users\\rini\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
 130              		.file 5 "c:\\users\\rini\\appdata\\roaming\\code\\user\\globalstorage\\bmd.stm32-for-vscode\\@xpac
ARM GAS  C:\Users\rini\AppData\Local\Temp\ccZQlztR.s 			page 5


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sysmem.c
C:\Users\rini\AppData\Local\Temp\ccZQlztR.s:24     .text._sbrk:0000000000000000 _sbrk
C:\Users\rini\AppData\Local\Temp\ccZQlztR.s:34     .text._sbrk:0000000000000000 $t
C:\Users\rini\AppData\Local\Temp\ccZQlztR.s:111    .text._sbrk:000000000000003c $d
C:\Users\rini\AppData\Local\Temp\ccZQlztR.s:119    .bss.__sbrk_heap_end:0000000000000000 $d
C:\Users\rini\AppData\Local\Temp\ccZQlztR.s:123    .bss.__sbrk_heap_end:0000000000000000 __sbrk_heap_end

UNDEFINED SYMBOLS
__errno
_estack
_Min_Stack_Size
_end
